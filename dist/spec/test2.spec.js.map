{"version":3,"sources":["webpack:///spec/test2.spec.js","webpack:///webpack/bootstrap cee8aa1ef52b93316edb","webpack:///../spec/test2.spec.ts","webpack:///./emulator/services/StateService.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","StateService_1","jasmine","getFixtures","fixturesPath","anApp","this","title","currentPageName","startPageName","pages","prototype","injectActionService","as","startAddingPages","CentralCallbackFunc","pageName","elementID","myApp","StateService","describe","it","expect","toBe","6","app","_app","getStartPageName","getCurrentPageName","setCurrentPageName","name","getCurrentPage","returnPage","targetName","_i","_a","length","page","getPage","getPages","emulatorCentralCallBack","element","targetElementInfo","getAppCallBack"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMMW,EACA,SAASP,EAAQD,EAASH,GAE/B,YEnCD,IAAAY,GAAAZ,EAA2B,EAK3Ba,SAAQC,cAAcC,aAAe,UAErC,IAAAC,GAAA,mBAAAA,KACIC,KAAAC,MAAe,OACfD,KAAAE,gBAAyB,OACzBF,KAAAG,cAAuB,OACvBH,KAAAI,SAIJ,MAHIL,GAAAM,UAAAC,oBAAA,SAAoBC,KACpBR,EAAAM,UAAAG,iBAAA,aACAT,EAAAM,UAAAI,oBAAA,SAAoBC,EAAiBC,KACzCZ,KAEIa,EAAQ,GAAIb,EACK,IAAIJ,GAAAkB,aAAaD,EAEtCE,UAAS,0BAA2B,WAChCC,GAAG,iDAAkD,WACjDC,QAAO,GAAMC,MAAK,QF0CpBC,EACA,SAAS/B,EAAQD,GAEtB,YGzED,IAAA2B,GAAA,WASI,QAAAA,GAAYM,GACRnB,KAAKoB,KAAOD,EAsDpB,MAnDIN,GAAAR,UAAAgB,iBAAA,WACI,MAAOrB,MAAKoB,KAAKjB,eAGrBU,EAAAR,UAAAiB,mBAAA,WACI,MAAOtB,MAAKoB,KAAKlB,iBAGrBW,EAAAR,UAAAkB,mBAAA,SAAmBC,GACfxB,KAAKoB,KAAKlB,gBAAkBsB,GAGhCX,EAAAR,UAAAoB,eAAA,WAGI,IAAiB,GADbC,GADAC,EAAqB3B,KAAKoB,KAAKlB,gBAElB0B,EAAA,EAAAC,EAAA7B,KAAKoB,KAAKhB,MAAVwB,EAAAC,EAAAC,OAAAF,IAAgB,CAA5B,GAAIG,GAAIF,EAAAD,EACT,IAAIG,EAAKP,OAASG,EAAY,CAC1BD,EAAaK,CACb,QAGR,MAAOL,IAGXb,EAAAR,UAAA2B,QAAA,SAAQR,GAEJ,IAAiB,GADbE,GACaE,EAAA,EAAAC,EAAA7B,KAAKoB,KAAKhB,MAAVwB,EAAAC,EAAAC,OAAAF,IAAgB,CAA5B,GAAIG,GAAIF,EAAAD,EACT,IAAIG,EAAKP,OAASA,EAAM,CACpBE,EAAaK,CACb,QAGR,MAAOL,IAGXb,EAAAR,UAAA4B,SAAA,WACI,MAAOjC,MAAKoB,KAAKhB,OAGrBS,EAAAR,UAAA6B,wBAAA,SAAwBC,EAAmBC,GACvC,GAAIlC,GAAyBF,KAAKqB,kBAC9Be,GACApC,KAAKoB,KAAKX,oBAAoBP,EAAiBiC,EAAQX,KAAMY,GAE7DpC,KAAKoB,KAAKX,oBAAoBP,EAAiBiC,EAAQX,OAI/DX,EAAAR,UAAAgC,eAAA,WACI,MAAOrC,MAAKoB,KAAKX,qBAEzBI,IAhEa3B,GAAA2B,aAAYA","file":"./spec/test2.spec.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar StateService_1 = __webpack_require__(6);\n\tjasmine.getFixtures().fixturesPath = \"../spec/\";\n\tvar anApp = (function () {\n\t    function anApp() {\n\t        this.title = \"test\";\n\t        this.currentPageName = \"test\";\n\t        this.startPageName = \"test\";\n\t        this.pages = [];\n\t    }\n\t    anApp.prototype.injectActionService = function (as) { };\n\t    ;\n\t    anApp.prototype.startAddingPages = function () { };\n\t    ;\n\t    anApp.prototype.CentralCallbackFunc = function (pageName, elementID) { };\n\t    ;\n\t    return anApp;\n\t}());\n\tvar myApp = new anApp();\n\tvar myStateService = new StateService_1.StateService(myApp);\n\tdescribe('Tests for ActionService', function () {\n\t    it('goPage() should call goPage from SystemService', function () {\n\t        expect(true).toBe(true);\n\t    });\n\t});\n\n\n/***/ },\n\n/***/ 6:\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar StateService = (function () {\n\t    function StateService(app) {\n\t        this._app = app;\n\t    }\n\t    StateService.prototype.getStartPageName = function () {\n\t        return this._app.startPageName;\n\t    };\n\t    StateService.prototype.getCurrentPageName = function () {\n\t        return this._app.currentPageName;\n\t    };\n\t    StateService.prototype.setCurrentPageName = function (name) {\n\t        this._app.currentPageName = name;\n\t    };\n\t    StateService.prototype.getCurrentPage = function () {\n\t        var targetName = this._app.currentPageName;\n\t        var returnPage;\n\t        for (var _i = 0, _a = this._app.pages; _i < _a.length; _i++) {\n\t            var page = _a[_i];\n\t            if (page.name === targetName) {\n\t                returnPage = page;\n\t                break;\n\t            }\n\t        }\n\t        return returnPage;\n\t    };\n\t    StateService.prototype.getPage = function (name) {\n\t        var returnPage;\n\t        for (var _i = 0, _a = this._app.pages; _i < _a.length; _i++) {\n\t            var page = _a[_i];\n\t            if (page.name === name) {\n\t                returnPage = page;\n\t                break;\n\t            }\n\t        }\n\t        return returnPage;\n\t    };\n\t    StateService.prototype.getPages = function () {\n\t        return this._app.pages;\n\t    };\n\t    StateService.prototype.emulatorCentralCallBack = function (element, targetElementInfo) {\n\t        var currentPageName = this.getStartPageName();\n\t        if (targetElementInfo) {\n\t            this._app.CentralCallbackFunc(currentPageName, element.name, targetElementInfo);\n\t        }\n\t        else {\n\t            this._app.CentralCallbackFunc(currentPageName, element.name);\n\t        }\n\t    };\n\t    StateService.prototype.getAppCallBack = function () {\n\t        return this._app.CentralCallbackFunc;\n\t    };\n\t    return StateService;\n\t}());\n\texports.StateService = StateService;\n\n\n/***/ }\n\n/******/ });\n\n\n/** WEBPACK FOOTER **\n ** spec/test2.spec.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap cee8aa1ef52b93316edb\n **/","///<reference path=\"../src/emulator/ui/types/jquery.d.ts\" />\n///<reference path=\"typings/jasmine-jquery.d.ts\" />\n\nimport {IStateService} from \"../src/emulator/models/serviceModels/IStateService\";\nimport {ITemplatingService} from \"../src/emulator/models/serviceModels/ITemplatingService\";\nimport {ISystemService} from \"../src/emulator/models/serviceModels/ISystemService\";\nimport {IActionService} from \"../src/emulator/models/serviceModels/IActionService\";\nimport {IPage} from \"../src/emulator/models/dataModels/IPage\";\nimport {IApp} from \"../src/emulator/models/dataModels/IApp\";\nimport {IElement} from \"../src/emulator/models/dataModels/IElement\";\nimport {IListItem} from \"../src/emulator/models/dataModels/IListItem\";\nimport {IFunc} from \"../src/emulator/models/dataModels/IFunction\";\nimport {StateService} from \"../src/emulator/services/StateService\";\nimport {TemplatingService} from \"../src/emulator/services/TemplatingService\";\nimport {SystemService} from \"../src/emulator/services/SystemService\";\nimport {ActionService} from \"../src/emulator/services/ActionService\";\n\njasmine.getFixtures().fixturesPath = \"../spec/\";\n\nclass anApp implements IApp {\n    title:string = \"test\";\n    currentPageName:string = \"test\";\n    startPageName:string = \"test\";\n    pages:Array<IPage> = [];\n    injectActionService(as:IActionService) {};\n    startAddingPages() {};\n    CentralCallbackFunc(pageName:string, elementID?:string) {};\n}\n\nlet myApp = new anApp();\nlet myStateService = new StateService(myApp);\n\ndescribe('Tests for ActionService', () => {\n    it('goPage() should call goPage from SystemService', () => {\n        expect(true).toBe(true);//asdfadf\n    });\n});\n\n\n/** WEBPACK FOOTER **\n ** ../spec/test2.spec.ts\n **/","import {IStateService} from \"../models/serviceModels/IStateService\";\nimport {IPage} from \"../models/dataModels/IPage\";\nimport {IApp} from \"../models/dataModels/IApp\";\nimport {IElement} from \"../models/dataModels/IElement\";\n\n\nexport class StateService implements IStateService {\n    _app: IApp;\n\n    /**\n     * Constructs the application\n     * @method constructor\n     * @param  {IApp}      app - retrieves required information\n     * @return {[type]}        - returns the application information\n     */\n    constructor(app: IApp) {\n        this._app = app;\n    }\n\n    getStartPageName(): string {\n        return this._app.startPageName;\n    }\n\n    getCurrentPageName(): string {\n        return this._app.currentPageName;\n    }\n\n    setCurrentPageName(name: string) {\n        this._app.currentPageName = name;\n    }\n\n    getCurrentPage(): IPage {\n        let targetName: string = this._app.currentPageName;\n        let returnPage: IPage;\n        for (let page of this._app.pages) {\n            if (page.name === targetName) {\n                returnPage = page;\n                break;\n            }\n        }\n        return returnPage;\n    }\n\n    getPage(name: string): IPage {\n        let returnPage: IPage;\n        for (let page of this._app.pages) {\n            if (page.name === name) {\n                returnPage = page;\n                break;\n            }\n        }\n        return returnPage;\n    }\n\n    getPages(): Array<IPage> {\n        return this._app.pages;\n    }\n\n    emulatorCentralCallBack(element: IElement, targetElementInfo?: string) {\n        let currentPageName:string = this.getStartPageName();\n        if (targetElementInfo) {\n            this._app.CentralCallbackFunc(currentPageName, element.name, targetElementInfo);\n        } else {\n            this._app.CentralCallbackFunc(currentPageName, element.name);\n        }\n    }\n\n    getAppCallBack(): (pageName: string, elementID?: string) => void {\n        return this._app.CentralCallbackFunc;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./emulator/services/StateService.ts\n **/"],"sourceRoot":""}