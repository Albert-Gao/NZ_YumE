{"version":3,"sources":["webpack:///spec/test2.spec.js","webpack:///webpack/bootstrap 8cca4b9092a8b56fa3d2?eba9*","webpack:///../spec/test2.spec.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","jasmine","getFixtures","fixturesPath","describe","it","expect","toBe"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,GAEtB,YE7BDQ,SAAQC,cAAcC,aAAe,WAerCC,SAAS,0BAA2B,WAChCC,GAAG,iDAAkD,WACjDC,QAAO,GAAMC,MAAK","file":"./spec/test2.spec.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tjasmine.getFixtures().fixturesPath = \"../spec/\";\n\tdescribe('Tests for ActionService', function () {\n\t    it('goPage() should call goPage from SystemService', function () {\n\t        expect(true).toBe(true);\n\t    });\n\t});\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** spec/test2.spec.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 8cca4b9092a8b56fa3d2\n **/","///<reference path=\"../src/emulator/ui/types/jquery.d.ts\" />\n///<reference path=\"typings/jasmine-jquery.d.ts\" />\n\nimport {IStateService} from \"../src/emulator/models/serviceModels/IStateService\";\nimport {ITemplatingService} from \"../src/emulator/models/serviceModels/ITemplatingService\";\nimport {ISystemService} from \"../src/emulator/models/serviceModels/ISystemService\";\nimport {IActionService} from \"../src/emulator/models/serviceModels/IActionService\";\nimport {IPage} from \"../src/emulator/models/dataModels/IPage\";\nimport {IApp} from \"../src/emulator/models/dataModels/IApp\";\nimport {IElement} from \"../src/emulator/models/dataModels/IElement\";\nimport {IListItem} from \"../src/emulator/models/dataModels/IListItem\";\nimport {IFunc} from \"../src/emulator/models/dataModels/IFunction\";\nimport {StateService} from \"../src/emulator/services/StateService\";\nimport {TemplatingService} from \"../src/emulator/services/TemplatingService\";\nimport {SystemService} from \"../src/emulator/services/SystemService\";\nimport {ActionService} from \"../src/emulator/services/ActionService\";\n\njasmine.getFixtures().fixturesPath = \"../spec/\";\n\n/*class anApp implements IApp {\n    title:string = \"test\";\n    currentPageName:string = \"test\";\n    startPageName:string = \"test\";\n    pages:Array<IPage> = [];\n    injectActionService(as:IActionService) {};\n    startAddingPages() {};\n    CentralCallbackFunc(pageName:string, elementID?:string) {};\n}*/\n\n//let myApp = new anApp();\n//let myStateService = new StateService(myApp);\n\ndescribe('Tests for ActionService', () => {\n    it('goPage() should call goPage from SystemService', () => {\n        expect(true).toBe(true);//asdfadf\n    });\n});\n\n\n/** WEBPACK FOOTER **\n ** ../spec/test2.spec.ts\n **/"],"sourceRoot":""}