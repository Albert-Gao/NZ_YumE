{"version":3,"sources":["webpack:///spec/test2.spec.js","webpack:///webpack/bootstrap 1262506c4a8546a4150c?71a1*","webpack:///../spec/test2.spec.ts","webpack:///./emulator/ui/emulator.ts?928e","webpack:///./application/application.ts?f18c*","webpack:///./application/page1search.ts?a484*","webpack:///./application/page2list.ts?125b*","webpack:///./application/page3Map.ts?cf7e*","webpack:///./emulator/services/StateService.ts?b70c*","webpack:///./emulator/services/TemplatingService.ts?e74f*","webpack:///./emulator/services/SystemService.ts?39fd*","webpack:///./emulator/services/ActionService.ts?0899*"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","emulator_1","es","emulator","describe","it","expect","_app","toBeDefined","_stateService","_templatingService","_systemService","_actionService","pages","length","toEqual","spyOn","startEmulator","toHaveBeenCalled","beforeEach","setFixtures","foo","$","toExist","toHaveText","done","POLL_TIME","endTime","Date","getTime","checkCondition","is","setTimeout","not","toBeVisible","currentPageName","startPageName","application_1","StateService_1","TemplatingService_1","SystemService_1","ActionService_1","this","application","StateService","TemplatingService","SystemService","ActionService","injectActionService","startAddingPages","prototype","page1search_1","page2list_1","page3Map_1","title","CentralCallbackFunc","appCallback","as","push","page1search","page2list","page3Map","pageName","elementName","targetElementInfo","func","_this","callYelpSearchAPI","json","list","tailorYelpResult","_i","_a","page","name","_b","_c","rawLayout","e","type","define","image_url","reRenderPage","getMatchedFunction","elementID","targetElementID","callback","targetPage","bindToName","callbackFunction","_item","phone","rating","category","categories","comment","snippet_text","address","lat","long","location","coordinate","latitude","longitude","coords","googleMapsHelper","mapURL","apiKey","returnRawLayout","afterRenderLayout","returnCallbackFuncs","targetID","searchButtonCallBack","info","goPage","showNotification","goBackButtonCallBack","goMapCallBack","defaultMap","goHomeCallBack","app","getStartPageName","getCurrentPageName","setCurrentPageName","getCurrentPage","returnPage","targetName","getPage","getPages","emulatorCentralCallBack","element","getAppCallBack","stateService","createPage","buttons","outDiv","createLayout","_loop_1","element1","row","this_1","createjQueryItem","undefined","temp","key","value","on","targetText","val","width","after","removeClass","addClass","append","temp1","temp2","temp3","label","input","listGroup","listItemsData","_loop_2","item","a","url","h5","description","listItemsData_1","createPagesAndSave","removeElementFromDOM","className","remove","attrs","styleClasses","text","domElement","document","createElement","attrs_1","attr","html","templatingService","removeCurrentPageFromScreen","prepend","renewCurrentPage","renderAllPages","page1","goStartPage","backgroundDIV","brand","fadeIn","fadeOut","hideSplashScreen","noticeDIV","systemService","words","saveToLocalStorage","localStorage","setItem","getFromLocalStorage","getItem","keywords","auth","consumerKey","consumerSecret","accessToken","accessTokenSecret","serviceProvider","signatureMethod","terms","near","accessor","tokenSecret","parameters","message","action","method","OAuth","setTimestampAndNonce","SignatureMethod","sign","parameterMap","getParameterMap","ajax","data","dataType","jsonpCallback","cache","textStatus","jqXHR","businesses","fail","errorThrown","console","log","JSON","stringify"],"mappings":"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","file":"./spec/test2.spec.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t///<reference path=\"../src/emulator/ui/types/jquery.d.ts\" />\n\t///<reference path=\"typings/jasmine-jquery.d.ts\" />\n\t\"use strict\";\n\tvar emulator_1 = __webpack_require__(2);\n\t//jasmine.getFixtures().fixturesPath = \"../spec/\";\n\t//need to launch Chrome/Chromium with --allow-file-access-from-files option\n\t//for fixtures to work. Works in standard FireFox.\n\t//see https://github.com/velesin/jasmine-jquery#cross-domain-policy-problems-under-chrome\n\t//can load a fixture with loadFixtures('myFixture.html');\n\tvar es = new emulator_1.emulator(); //this is the entry point for the whole project\n\tdescribe('Tests for emulator', function () {\n\t    it('An app should be defined', function () {\n\t        expect(es._app).toBeDefined();\n\t    });\n\t    it('stateservice should be defined', function () {\n\t        expect(es._stateService).toBeDefined();\n\t    });\n\t    it('templatingService should be defined', function () {\n\t        expect(es._templatingService).toBeDefined();\n\t    });\n\t    it('systemService should be defined', function () {\n\t        expect(es._systemService).toBeDefined();\n\t    });\n\t    it('actionService should be defined', function () {\n\t        expect(es._actionService).toBeDefined();\n\t    });\n\t    it('The app should have been injected with an ActionService', function () {\n\t        expect(es._app._actionService).toBeDefined();\n\t    });\n\t    it('The app should have been intialised with 3 pages', function () {\n\t        expect(es._app.pages.length).toEqual(3);\n\t    });\n\t    it('The startEmulator fn, should call the function of the same name from systemService', function () {\n\t        spyOn(es._systemService, \"startEmulator\");\n\t        es.startEmulator();\n\t        expect(es._systemService.startEmulator).toHaveBeenCalled();\n\t    });\n\t});\n\tdescribe('Tests for starting of the emulator', function () {\n\t    beforeEach(function () {\n\t        setFixtures(\"<div class='emulator'></div>\");\n\t        es.startEmulator();\n\t        var foo = 5;\n\t        foo = 0; //as need to assign something in here??\n\t    });\n\t    it('Splash Screen should be displayed', function () {\n\t        expect($(\".splashScreen\")).toExist();\n\t    });\n\t    it('Splash Screen should display the brand', function () {\n\t        expect($(\".splashScreen\")).toHaveText(\"Smartisan\");\n\t    });\n\t    it('Splash Screen should display the brand', function () {\n\t        expect($(\".splashScreen\")).toHaveText(\"Smartisan\");\n\t    });\n\t    it('Splash Screen should be hidden after a few seconds, and first page shown', function (done) {\n\t        var POLL_TIME = 10;\n\t        var endTime = new Date().getTime() + 10000;\n\t        var checkCondition = function () {\n\t            if (new Date().getTime() <= endTime && $(\".splashScreen\").is(\":visible\")) {\n\t                setTimeout(checkCondition, POLL_TIME);\n\t            }\n\t            else {\n\t                expect($(\".splashScreen\")).not.toBeVisible();\n\t                expect(es._app.currentPageName).toEqual(es._app.startPageName);\n\t                done();\n\t            }\n\t        };\n\t        checkCondition();\n\t    }, 10000);\n\t});\n\n\n/***/ },\n/* 1 */,\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar application_1 = __webpack_require__(3);\n\tvar StateService_1 = __webpack_require__(7);\n\tvar TemplatingService_1 = __webpack_require__(8);\n\tvar SystemService_1 = __webpack_require__(9);\n\tvar ActionService_1 = __webpack_require__(10);\n\tvar emulator = (function () {\n\t    /**\n\t     * Constructs all information needed for the application\n\t     * @method constructor\n\t     */\n\t    function emulator() {\n\t        this._app = new application_1.application();\n\t        this._stateService = new StateService_1.StateService(this._app);\n\t        this._templatingService = new TemplatingService_1.TemplatingService(this._stateService);\n\t        this._systemService = new SystemService_1.SystemService(this._templatingService, this._stateService);\n\t        this._actionService = new ActionService_1.ActionService(this._systemService);\n\t        this._app.injectActionService(this._actionService);\n\t        this._app.startAddingPages();\n\t    }\n\t    /**\n\t     * Starts the emulator to allow the application to be executed\n\t     * @method startEmulator\n\t     */\n\t    emulator.prototype.startEmulator = function () {\n\t        this._systemService.startEmulator();\n\t    };\n\t    return emulator;\n\t}());\n\texports.emulator = emulator;\n\tvar es = new emulator();\n\tes.startEmulator();\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar page1search_1 = __webpack_require__(4);\n\tvar page2list_1 = __webpack_require__(5);\n\tvar page3Map_1 = __webpack_require__(6);\n\tvar application = (function () {\n\t    function application() {\n\t        this.title = \"YumE\";\n\t        this.currentPageName = \"\";\n\t        this.startPageName = \"page1search\";\n\t        this.pages = [];\n\t        this.CentralCallbackFunc = this.appCallback;\n\t    }\n\t    application.prototype.injectActionService = function (as) {\n\t        this._actionService = as;\n\t    };\n\t    application.prototype.startAddingPages = function () {\n\t        this.pages.push(new page1search_1.page1search());\n\t        this.pages.push(new page2list_1.page2list());\n\t        this.pages.push(new page3Map_1.page3Map());\n\t    };\n\t    application.prototype.appCallback = function (pageName, elementName, targetElementInfo) {\n\t        var _this = this;\n\t        var func;\n\t        switch (elementName) {\n\t            case \"page1button\":\n\t                if (targetElementInfo) {\n\t                    this._actionService.callYelpSearchAPI(targetElementInfo, function (json) {\n\t                        var list = _this.tailorYelpResult(json);\n\t                        for (var _i = 0, _a = _this.pages; _i < _a.length; _i++) {\n\t                            var page = _a[_i];\n\t                            if (page.name === 'page2list') {\n\t                                for (var _b = 0, _c = page.rawLayout; _b < _c.length; _b++) {\n\t                                    var e = _c[_b];\n\t                                    if (e.type === 'text' && e.name === 'page2text') {\n\t                                        e.define = list;\n\t                                    }\n\t                                    else if (e.type === 'image') {\n\t                                        if (typeof json !== 'undefined') {\n\t                                            if (typeof json.image_url !== 'undefined') {\n\t                                                e.define = json.image_url; //better image\n\t                                            }\n\t                                            else {\n\t                                                //set default image only if valid json, but no image\n\t                                                e.define = \"assets/food.png\";\n\t                                            }\n\t                                        }\n\t                                    }\n\t                                }\n\t                                _this._actionService.reRenderPage(page);\n\t                                break;\n\t                            }\n\t                        }\n\t                        func = _this.getMatchedFunction(pageName, elementName, targetElementInfo);\n\t                        func(_this._actionService, targetElementInfo);\n\t                    });\n\t                }\n\t                else {\n\t                    this.getMatchedFunction(pageName, elementName)(this._actionService);\n\t                }\n\t                break;\n\t            case \"home\":\n\t                func = this.getMatchedFunction(\"page2list\", elementName);\n\t                func(this._actionService);\n\t                break;\n\t            case \"mapButton\":\n\t                this._actionService.reRenderPage(this.pages[2]);\n\t                func = this.getMatchedFunction(\"page2list\", elementName);\n\t                func(this._actionService);\n\t                break;\n\t            case \"backToResults\":\n\t                func = this.getMatchedFunction(\"page3Map\", elementName);\n\t                func(this._actionService);\n\t        }\n\t    };\n\t    application.prototype.getMatchedFunction = function (pageName, elementID, targetElementID) {\n\t        var callback;\n\t        var targetPage;\n\t        for (var _i = 0, _a = this.pages; _i < _a.length; _i++) {\n\t            var page = _a[_i];\n\t            if (page.name === pageName) {\n\t                targetPage = page;\n\t                break;\n\t            }\n\t        }\n\t        for (var _b = 0, _c = targetPage.callback; _b < _c.length; _b++) {\n\t            var func = _c[_b];\n\t            if (func.bindToName === elementID) {\n\t                callback = func;\n\t                break;\n\t            }\n\t        }\n\t        return callback.callbackFunction;\n\t    };\n\t    application.prototype.tailorYelpResult = function (json) {\n\t        var define;\n\t        //Yelp API suck even for v2 version.\n\t        if (json) {\n\t            var _item = json;\n\t            //Need this weird coding, to cover yelp's bad non-consistent API design.\n\t            var title = _item.name ? _item.name : \"\";\n\t            var phone = _item.phone ? _item.phone : \"\";\n\t            var rating = _item.rating ? _item.rating : \"\";\n\t            var category = _item.categories ? _item.categories[0][0] : \"\";\n\t            var comment = _item.snippet_text ? _item.snippet_text : \"\";\n\t            var address = void 0;\n\t            var lat = void 0;\n\t            var long = void 0;\n\t            if (_item.location) {\n\t                address = _item.location.address ? _item.location.address[0] : \"\";\n\t                if (_item.location.coordinate) {\n\t                    lat = _item.location.coordinate.latitude;\n\t                    long = _item.location.coordinate.longitude;\n\t                }\n\t                else {\n\t                    lat = long = 0;\n\t                }\n\t            }\n\t            else {\n\t                address = \"\";\n\t                lat = long = 0;\n\t            }\n\t            for (var _i = 0, _a = this.pages[2].rawLayout; _i < _a.length; _i++) {\n\t                var e = _a[_i];\n\t                if (e.type === 'image') {\n\t                    var coords = \"\" + lat + \",\" + long;\n\t                    e.define = this.googleMapsHelper(coords);\n\t                    break;\n\t                }\n\t            }\n\t            define = '<br/>' + '<strong>Title: \\</strong>' + title + '<br/>' + '<strong>Phone: \\</strong>'\n\t                + phone + '   |  ' + '<strong\\>Address: \\</strong>' + address\n\t                + '<br/>' + '<strong>Rating: \\</strong>' + rating\n\t                + '   |  ' + '<strong>Category: \\</strong>' + category\n\t                + '<br/>' + '<strong>Comment: \\</strong>' + comment;\n\t        }\n\t        else {\n\t            define = '<br/>' + \"Sorry, Yelp can't recognize your keyword, please go back and search again.\";\n\t            //so that sad image returns if successful then failed search\n\t            this.pages[1].rawLayout[3].define = \"./assets/cry.png\";\n\t        }\n\t        return define;\n\t    };\n\t    application.prototype.googleMapsHelper = function (coords) {\n\t        var mapURL = \"https://maps.googleapis.com/maps/api/staticmap?&size=300x230&maptype=roadmap\" +\n\t            \"&visible=Octagon,Dunedin,NZ\" +\n\t            \"&markers=color:yellow%7Clabel:U%7C-45.8743,170.5036\" +\n\t            \"&markers=color:blue%7Clabel:F%7C\";\n\t        var apiKey = \"&key=AIzaSyDHTnM42xU_IGgOk0OGswZGOAtDRr8e66I\";\n\t        return mapURL + coords + apiKey;\n\t    };\n\t    return application;\n\t}());\n\texports.application = application;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar page1search = (function () {\n\t    function page1search() {\n\t        this.name = \"page1search\";\n\t        this.rawLayout = this.returnRawLayout();\n\t        this.afterRenderLayout = null;\n\t        this.callback = this.returnCallbackFuncs();\n\t    }\n\t    page1search.prototype.returnRawLayout = function () {\n\t        return [\n\t            {\n\t                type: \"image\",\n\t                name: \"page1image\",\n\t                define: \"./assets/YuMe_logo.jpg\"\n\t            },\n\t            {\n\t                type: \"text\",\n\t                name: \"page1text\",\n\t                define: \"Search better, eat fatter :)\"\n\t            },\n\t            {\n\t                type: \"input\",\n\t                name: \"page1input\",\n\t                define: \"Enter the name\"\n\t            },\n\t            {\n\t                type: \"button\",\n\t                name: \"page1button\",\n\t                targetElementID: \"page1input\",\n\t                define: \"YumE it!\"\n\t            },\n\t            {\n\t                type: \"text\",\n\t                name: \"page1text1\",\n\t                define: \" \"\n\t            }\n\t        ];\n\t    };\n\t    page1search.prototype.returnCallbackFuncs = function () {\n\t        return [\n\t            {\n\t                bindToName: \"page1button\",\n\t                targetID: \"page1text\",\n\t                callbackFunction: this.searchButtonCallBack\n\t            }\n\t        ];\n\t    };\n\t    page1search.prototype.searchButtonCallBack = function (_actionService, info) {\n\t        if (info && info != \"\") {\n\t            _actionService.goPage(\"page2list\");\n\t        }\n\t        else {\n\t            _actionService.showNotification(\"Please enter the name of restaurant.\");\n\t        }\n\t    };\n\t    return page1search;\n\t}());\n\texports.page1search = page1search;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar page2list = (function () {\n\t    function page2list() {\n\t        this.name = \"page2list\";\n\t        this.rawLayout = this.returnRawLayout();\n\t        this.afterRenderLayout = null;\n\t        this.callback = this.returnCallbackFuncs();\n\t    }\n\t    page2list.prototype.returnRawLayout = function () {\n\t        return [\n\t            {\n\t                type: \"text\",\n\t                name: \"page2placeholder\",\n\t                define: \" \"\n\t            },\n\t            {\n\t                type: \"button\",\n\t                name: \"home\",\n\t                define: \"Back\"\n\t            },\n\t            {\n\t                type: \"text\",\n\t                name: \"page2placeholder\",\n\t                define: \" \"\n\t            },\n\t            {\n\t                type: \"image\",\n\t                name: \"page2image\",\n\t                define: \"./assets/cry.png\"\n\t            },\n\t            {\n\t                type: \"text\",\n\t                name: \"page2text\",\n\t                define: \"I really love it\"\n\t            },\n\t            {\n\t                type: \"button\",\n\t                name: \"mapButton\",\n\t                define: \"Map\"\n\t            }\n\t        ];\n\t    };\n\t    page2list.prototype.returnCallbackFuncs = function () {\n\t        return [\n\t            {\n\t                bindToName: \"home\",\n\t                callbackFunction: this.goBackButtonCallBack\n\t            },\n\t            {\n\t                bindToName: \"mapButton\",\n\t                callbackFunction: this.goMapCallBack\n\t            }\n\t        ];\n\t    };\n\t    page2list.prototype.goBackButtonCallBack = function (_actionService) {\n\t        _actionService.goPage(\"page1search\");\n\t    };\n\t    page2list.prototype.goMapCallBack = function (_actionService) {\n\t        _actionService.goPage(\"page3Map\");\n\t    };\n\t    return page2list;\n\t}());\n\texports.page2list = page2list;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar page3Map = (function () {\n\t    function page3Map() {\n\t        this.defaultMap = \"https://maps.googleapis.com/maps/api/staticmap?&size=300x230&maptype=roadmap\" +\n\t            \"&visible=Octagon,Dunedin,NZ\" +\n\t            \"&markers=color:yellow%7Clabel:U%7C-45.8743,170.5036\" +\n\t            \"&key=AIzaSyDHTnM42xU_IGgOk0OGswZGOAtDRr8e66I\";\n\t        this.name = \"page3Map\";\n\t        this.rawLayout = this.returnRawLayout();\n\t        this.afterRenderLayout = null;\n\t        this.callback = this.returnCallbackFuncs();\n\t    }\n\t    page3Map.prototype.returnRawLayout = function () {\n\t        return [\n\t            {\n\t                type: \"text\",\n\t                name: \"page3placeholder\",\n\t                define: \" \"\n\t            },\n\t            {\n\t                type: \"button\",\n\t                name: \"backToResults\",\n\t                define: \"Back\"\n\t            },\n\t            {\n\t                type: \"button\",\n\t                name: \"home\",\n\t                define: \"Search\"\n\t            },\n\t            {\n\t                type: \"text\",\n\t                name: \"page3placeholder\",\n\t                define: \" \"\n\t            },\n\t            {\n\t                type: \"image\",\n\t                name: \"page3image\",\n\t                define: this.defaultMap\n\t            }\n\t        ];\n\t    };\n\t    page3Map.prototype.returnCallbackFuncs = function () {\n\t        return [\n\t            {\n\t                bindToName: \"backToResults\",\n\t                callbackFunction: this.goBackButtonCallBack\n\t            },\n\t            {\n\t                bindToName: \"home\",\n\t                callbackFunction: this.goHomeCallBack\n\t            }\n\t        ];\n\t    };\n\t    page3Map.prototype.goBackButtonCallBack = function (_actionService) {\n\t        _actionService.goPage(\"page2list\");\n\t    };\n\t    page3Map.prototype.goHomeCallBack = function (_actionService) {\n\t        _actionService.goPage(\"page1search\");\n\t    };\n\t    return page3Map;\n\t}());\n\texports.page3Map = page3Map;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar StateService = (function () {\n\t    /**\n\t     * Constructs the application\n\t     * @method constructor\n\t     * @param  {IApp}      app - retrieves required information\n\t     * @return {[type]}        - returns the application information\n\t     */\n\t    function StateService(app) {\n\t        this._app = app;\n\t    }\n\t    StateService.prototype.getStartPageName = function () {\n\t        return this._app.startPageName;\n\t    };\n\t    StateService.prototype.getCurrentPageName = function () {\n\t        return this._app.currentPageName;\n\t    };\n\t    StateService.prototype.setCurrentPageName = function (name) {\n\t        this._app.currentPageName = name;\n\t    };\n\t    StateService.prototype.getCurrentPage = function () {\n\t        var targetName = this._app.currentPageName;\n\t        var returnPage;\n\t        for (var _i = 0, _a = this._app.pages; _i < _a.length; _i++) {\n\t            var page = _a[_i];\n\t            if (page.name === targetName) {\n\t                returnPage = page;\n\t                break;\n\t            }\n\t        }\n\t        return returnPage;\n\t    };\n\t    StateService.prototype.getPage = function (name) {\n\t        var returnPage;\n\t        for (var _i = 0, _a = this._app.pages; _i < _a.length; _i++) {\n\t            var page = _a[_i];\n\t            if (page.name === name) {\n\t                returnPage = page;\n\t                break;\n\t            }\n\t        }\n\t        return returnPage;\n\t    };\n\t    StateService.prototype.getPages = function () {\n\t        return this._app.pages;\n\t    };\n\t    StateService.prototype.emulatorCentralCallBack = function (element, targetElementInfo) {\n\t        var currentPageName = this.getStartPageName();\n\t        if (targetElementInfo) {\n\t            this._app.CentralCallbackFunc(currentPageName, element.name, targetElementInfo);\n\t        }\n\t        else {\n\t            this._app.CentralCallbackFunc(currentPageName, element.name);\n\t        }\n\t    };\n\t    StateService.prototype.getAppCallBack = function () {\n\t        return this._app.CentralCallbackFunc;\n\t    };\n\t    return StateService;\n\t}());\n\texports.StateService = StateService;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t///<reference path=\"../ui/types/jquery.d.ts\" />\n\t\"use strict\";\n\tvar TemplatingService = (function () {\n\t    /**\n\t     * Constructs the service state\n\t     * @method constructor\n\t     * @param  {IStateService} stateService - provides the service state\n\t     * @return {[type]}                     - returns service template\n\t     */\n\t    function TemplatingService(stateService) {\n\t        this._stateService = stateService;\n\t    }\n\t    TemplatingService.prototype.createPage = function (page) {\n\t        var _this = this;\n\t        var outDiv = this.createLayout();\n\t        var _loop_1 = function(element1) {\n\t            var row = this_1.createjQueryItem(\"div\", undefined, \"row\", undefined);\n\t            var element = element1;\n\t            switch (element.type) {\n\t                case \"button\":\n\t                    var temp = this_1.createjQueryItem(\"button\", [{ key: \"id\", value: element.name }], \"btn btn-primary btn-lg btn-block\", //btn-block\n\t                    element.define);\n\t                    if (element.targetElementID) {\n\t                        $(\".emulator\").on('click', \"#\" + element.name, function () {\n\t                            var targetText = $(\"#\" + element.targetElementID).val();\n\t                            _this._stateService.emulatorCentralCallBack(element, targetText);\n\t                        });\n\t                    }\n\t                    else {\n\t                        $(\".emulator\").on('click', \"#\" + element.name, function () {\n\t                            _this._stateService.emulatorCentralCallBack(element);\n\t                        });\n\t                    }\n\t                    if ($(\".btn\", outDiv).length) {\n\t                        buttons = $(\".btn\", outDiv);\n\t                        var width = 12 / (buttons.length + 1);\n\t                        buttons.after(temp);\n\t                        buttons = $(\".btn\", outDiv); //to capture new button too\n\t                        buttons.removeClass(\"btn-block\");\n\t                        buttons.addClass(\"col-sm-\" + width);\n\t                    }\n\t                    else {\n\t                        row.append(temp);\n\t                    }\n\t                    break;\n\t                case \"text\":\n\t                    var temp1 = this_1.createjQueryItem(\"p\", [{ key: \"id\", value: element.name }], undefined, element.define);\n\t                    row.append(temp1);\n\t                    break;\n\t                case \"image\":\n\t                    var temp2 = this_1.createjQueryItem(\"img\", [{ key: \"id\", value: element.name }, { key: \"src\", value: element.define }], \"img-fluid\");\n\t                    row.append(temp2);\n\t                    break;\n\t                case \"input\":\n\t                    var temp3 = this_1.createjQueryItem(\"div\", undefined, \"form-group\");\n\t                    var label = this_1.createjQueryItem(\"label\", [{ key: \"for\", value: element.name }], \"sr-only\", element.define);\n\t                    temp3.append(label);\n\t                    var input = this_1.createjQueryItem(\"input\", [{ key: \"type\", value: \"text\" }, { key: \"id\", value: element.name }, { key: \"for\", value: element.name }, { key: \"placeholder\", value: element.define }], \"form-control\", element.define);\n\t                    temp3.append(input);\n\t                    row.append(temp3);\n\t                    break;\n\t                case \"list\":\n\t                    var listGroup = this_1.createjQueryItem(\"div\", undefined, \"list-group\");\n\t                    var listItemsData = (element.define);\n\t                    var _loop_2 = function(item) {\n\t                        var a = this_1.createjQueryItem(\"a\", undefined, \"list-group-item list-group-item-action\");\n\t                        $(\".emulator\").on('click', \"#\" + element.name, function () {\n\t                            _this._stateService.emulatorCentralCallBack(element, item.url);\n\t                        });\n\t                        var h5 = this_1.createjQueryItem(\"h5\", undefined, \"list-group-item-heading\", item.title);\n\t                        var p = this_1.createjQueryItem(\"p\", undefined, \"list-group-item-text\", item.description);\n\t                        a.append(h5);\n\t                        a.append(p);\n\t                        listGroup.append(a);\n\t                    };\n\t                    for (var _i = 0, listItemsData_1 = listItemsData; _i < listItemsData_1.length; _i++) {\n\t                        var item = listItemsData_1[_i];\n\t                        _loop_2(item);\n\t                    }\n\t                    row.append(listGroup);\n\t                    break;\n\t            }\n\t            outDiv.append(row);\n\t        };\n\t        var this_1 = this;\n\t        var buttons;\n\t        for (var _a = 0, _b = page.rawLayout; _a < _b.length; _a++) {\n\t            var element1 = _b[_a];\n\t            _loop_1(element1);\n\t        }\n\t        return outDiv;\n\t    };\n\t    TemplatingService.prototype.createPagesAndSave = function () {\n\t        for (var _i = 0, _a = this._stateService.getPages(); _i < _a.length; _i++) {\n\t            var page = _a[_i];\n\t            page.afterRenderLayout = this.createPage(page);\n\t        }\n\t    };\n\t    TemplatingService.prototype.createLayout = function () {\n\t        return this.createjQueryItem('div', undefined, \"container-fluid\");\n\t    };\n\t    TemplatingService.prototype.removeElementFromDOM = function (className) {\n\t        $(className).remove();\n\t    };\n\t    TemplatingService.prototype.createjQueryItem = function (type, attrs, styleClasses, text) {\n\t        var domElement = $(document.createElement(type));\n\t        if (styleClasses) {\n\t            domElement.addClass(styleClasses);\n\t        }\n\t        if (attrs) {\n\t            for (var _i = 0, attrs_1 = attrs; _i < attrs_1.length; _i++) {\n\t                var item = attrs_1[_i];\n\t                domElement.attr(item.key, item.value);\n\t            }\n\t        }\n\t        if (text) {\n\t            domElement.html(text);\n\t        }\n\t        return domElement;\n\t    };\n\t    return TemplatingService;\n\t}());\n\texports.TemplatingService = TemplatingService;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar SystemService = (function () {\n\t    /**\n\t     * Constructs the template and services\n\t     * @method constructor\n\t     * @param  {ITemplatingService} templatingService - provides the template\n\t     * @param  {IStateService}      stateService      - provides service state\n\t     * @return {[type]}                               - returns system service\n\t     */\n\t    function SystemService(templatingService, stateService) {\n\t        this._templatingService = templatingService;\n\t        this._stateService = stateService;\n\t    }\n\t    SystemService.prototype.removeCurrentPageFromScreen = function () {\n\t        this._templatingService.removeElementFromDOM(\".container-fluid\");\n\t    };\n\t    SystemService.prototype.goPage = function (name) {\n\t        this.removeCurrentPageFromScreen();\n\t        for (var _i = 0, _a = this._stateService.getPages(); _i < _a.length; _i++) {\n\t            var page = _a[_i];\n\t            if (page.name === name) {\n\t                $(\".emulator\").prepend(page.afterRenderLayout);\n\t                this.renewCurrentPage(page.name);\n\t            }\n\t        }\n\t    };\n\t    SystemService.prototype.renderAllPages = function (page) {\n\t        if (page) {\n\t            var page1 = this._templatingService.createPage(page);\n\t            this._stateService.getPage(page.name).afterRenderLayout = page1;\n\t        }\n\t        else {\n\t            this._templatingService.createPagesAndSave();\n\t        }\n\t    };\n\t    SystemService.prototype.goStartPage = function () {\n\t        this.goPage(this._stateService.getStartPageName());\n\t    };\n\t    SystemService.prototype.renewCurrentPage = function (name) {\n\t        this._stateService.setCurrentPageName(name);\n\t    };\n\t    SystemService.prototype.startEmulator = function () {\n\t        var _this = this;\n\t        var backgroundDIV = this._templatingService.createjQueryItem(\"div\", undefined, \"splashScreen\");\n\t        var brand = this._templatingService.createjQueryItem(\"p\", undefined, \"brand\", \"Smartisan\");\n\t        $(\".emulator\").append(backgroundDIV);\n\t        backgroundDIV.append(brand);\n\t        backgroundDIV.fadeIn('slow', function () {\n\t            brand.fadeIn('slow')\n\t                .fadeOut('slow')\n\t                .fadeIn('slow', function () {\n\t                _this.hideSplashScreen();\n\t                _this.renderAllPages();\n\t                _this.goStartPage();\n\t            });\n\t        });\n\t    };\n\t    SystemService.prototype.hideSplashScreen = function () {\n\t        $(\".splashScreen\").fadeOut('slow').remove();\n\t    };\n\t    SystemService.prototype.showNotification = function (text) {\n\t        var noticeDIV = this._templatingService.createjQueryItem(\"div\", undefined, \"bg-danger\", text);\n\t        $(\".emulator\").prepend(noticeDIV);\n\t        setTimeout(function () {\n\t            noticeDIV.fadeOut('slow').remove();\n\t        }, 2000);\n\t    };\n\t    return SystemService;\n\t}());\n\texports.SystemService = SystemService;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar ActionService = (function () {\n\t    /**\n\t     * Constructs the services provided to the application\n\t     * @method constructor\n\t     * @param  {ISystemService} systemService - retrieves required information\n\t     * @return {[type]}                       - returns service of page request\n\t     */\n\t    function ActionService(systemService) {\n\t        this._systemService = systemService;\n\t    }\n\t    ActionService.prototype.goPage = function (name) {\n\t        this._systemService.goPage(name);\n\t    };\n\t    ActionService.prototype.showNotification = function (words) {\n\t        this._systemService.showNotification(words);\n\t    };\n\t    ActionService.prototype.saveToLocalStorage = function (key, value) {\n\t        localStorage.setItem(key, value);\n\t    };\n\t    ActionService.prototype.getFromLocalStorage = function (key) {\n\t        return localStorage.getItem(key);\n\t    };\n\t    ActionService.prototype.reRenderPage = function (page) {\n\t        this._systemService.renderAllPages(page);\n\t    };\n\t    ActionService.prototype.callYelpSearchAPI = function (keywords, callback) {\n\t        var auth = {\n\t            consumerKey: \"sNul62e6H0We5KJLGYP_Bw\",\n\t            consumerSecret: \"RxvIBp4BxRvNVxjaPlUWuiPFcYg\",\n\t            accessToken: \"nguVll4te_e1oDcv2EkS4xKC6GOoQhcN\",\n\t            accessTokenSecret: \"DrumlhFl5Kwb1ksCpRKEtiW6B58\",\n\t            serviceProvider: {\n\t                signatureMethod: \"HMAC-SHA1\"\n\t            }\n\t        };\n\t        var terms = keywords;\n\t        var near = 'Dunedin';\n\t        var category = 'restaurants,food,bars';\n\t        var accessor = {\n\t            consumerSecret: auth.consumerSecret,\n\t            tokenSecret: auth.accessTokenSecret\n\t        };\n\t        var parameters = [];\n\t        parameters.push(['term', terms]);\n\t        parameters.push(['location', near]);\n\t        parameters.push(['category_filter', category]);\n\t        parameters.push(['callback', 'cb']);\n\t        parameters.push(['oauth_consumer_key', auth.consumerKey]);\n\t        parameters.push(['oauth_consumer_secret', auth.consumerSecret]);\n\t        parameters.push(['oauth_token', auth.accessToken]);\n\t        parameters.push(['oauth_signature_method', 'HMAC-SHA1']);\n\t        var message = {\n\t            'action': 'https://api.yelp.com/v2/search',\n\t            'method': 'GET',\n\t            'parameters': parameters\n\t        };\n\t        OAuth.setTimestampAndNonce(message);\n\t        OAuth.SignatureMethod.sign(message, accessor);\n\t        var parameterMap = OAuth.getParameterMap(message.parameters);\n\t        $.ajax({\n\t            'url': message.action,\n\t            'data': parameterMap,\n\t            'dataType': 'jsonp',\n\t            'jsonpCallback': 'cb',\n\t            'cache': true\n\t        })\n\t            .done(function (data, textStatus, jqXHR) {\n\t            callback(data.businesses[0]);\n\t        })\n\t            .fail(function (jqXHR, textStatus, errorThrown) {\n\t            console.log('error[' + errorThrown + '], status[' + textStatus\n\t                + '], jqXHR[' + JSON.stringify(jqXHR) + ']');\n\t        });\n\t    };\n\t    return ActionService;\n\t}());\n\texports.ActionService = ActionService;\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** spec/test2.spec.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1262506c4a8546a4150c\n **/","///<reference path=\"../src/emulator/ui/types/jquery.d.ts\" />\n///<reference path=\"typings/jasmine-jquery.d.ts\" />\n\nimport {application} from \"../src/application/application\";\nimport {emulator} from \"../src/emulator/ui/emulator\";\n\n//jasmine.getFixtures().fixturesPath = \"../spec/\";\n//need to launch Chrome/Chromium with --allow-file-access-from-files option\n//for fixtures to work. Works in standard FireFox.\n//see https://github.com/velesin/jasmine-jquery#cross-domain-policy-problems-under-chrome\n//can load a fixture with loadFixtures('myFixture.html');\n\nlet es = new emulator(); //this is the entry point for the whole project\ndescribe('Tests for emulator', () => {\n    it('An app should be defined', () => {\n        expect(es._app).toBeDefined();\n    });\n    it('stateservice should be defined', () => {\n        expect(es._stateService).toBeDefined();\n    });\n    it('templatingService should be defined', () => {\n        expect(es._templatingService).toBeDefined();\n    });\n    it('systemService should be defined', () => {\n        expect(es._systemService).toBeDefined();\n    });\n    it('actionService should be defined', () => {\n        expect(es._actionService).toBeDefined();\n    });\n    it('The app should have been injected with an ActionService', () => {\n        expect((es._app as application)._actionService).toBeDefined();\n    });\n    it('The app should have been intialised with 3 pages', () => {\n        expect(es._app.pages.length).toEqual(3);\n    });\n    it('The startEmulator fn, should call the function of the same name from systemService', () => {\n        spyOn(es._systemService, \"startEmulator\");\n        es.startEmulator();\n        expect(es._systemService.startEmulator).toHaveBeenCalled();\n    });\n});\n\ndescribe('Tests for starting of the emulator', () => {\n    beforeEach(function() {\n        setFixtures(\"<div class='emulator'></div>\");\n        es.startEmulator();\n        let foo = 5; foo = 0; //as need to assign something in here??\n    });\n    it('Splash Screen should be displayed', () => {\n        expect($(\".splashScreen\")).toExist();\n    });\n    it('Splash Screen should display the brand', () => {\n        expect($(\".splashScreen\")).toHaveText(\"Smartisan\");\n    });\n    it('Splash Screen should display the brand', () => {\n        expect($(\".splashScreen\")).toHaveText(\"Smartisan\");\n    });\n    it('Splash Screen should be hidden after a few seconds, and first page shown', (done) => {\n        let POLL_TIME = 10;\n        let endTime = new Date().getTime() + 10000;\n        let checkCondition = () => {\n            if (new Date().getTime() <= endTime && $(\".splashScreen\").is(\":visible\")) {\n                setTimeout(checkCondition, POLL_TIME);\n            } else {   \n                expect($(\".splashScreen\")).not.toBeVisible();\n                expect(es._app.currentPageName).toEqual(es._app.startPageName);\n                done();\n            }\n        };\n        checkCondition();\n    }, 10000);\n});\n\n\n/** WEBPACK FOOTER **\n ** ../spec/test2.spec.ts\n **/","import {IApp} from \"../models/dataModels/IApp\";\nimport {IStateService} from \"../models/serviceModels/IStateService\";\nimport {ITemplatingService} from \"../models/serviceModels/ITemplatingService\";\nimport {ISystemService} from \"../models/serviceModels/ISystemService\";\nimport {IActionService} from \"../models/serviceModels/IActionService\";\nimport {application} from \"../../application/application\";\nimport {StateService} from \"../services/StateService\";\nimport {TemplatingService} from \"../services/TemplatingService\";\nimport {SystemService} from \"../services/SystemService\";\nimport {ActionService} from \"../services/ActionService\";\n\nexport class emulator{\n    _app:IApp;\n    _stateService:IStateService;\n    _templatingService:ITemplatingService;\n    _systemService:ISystemService;\n    _actionService:IActionService;\n\n    /**\n     * Constructs all information needed for the application\n     * @method constructor\n     */\n    constructor() {\n        this._app = new application();\n        this._stateService = new StateService(this._app);\n        this._templatingService = new TemplatingService(this._stateService);\n        this._systemService = new SystemService(this._templatingService,this._stateService);\n        this._actionService = new ActionService(this._systemService);\n        this._app.injectActionService(this._actionService);\n        this._app.startAddingPages();\n    }\n\n    /**\n     * Starts the emulator to allow the application to be executed\n     * @method startEmulator\n     */\n    startEmulator(){\n        this._systemService.startEmulator();\n    }\n}\n\nlet es = new emulator();\nes.startEmulator();\n\n\n\n/** WEBPACK FOOTER **\n ** ./emulator/ui/emulator.ts\n **/","import {IApp} from \"../emulator/models/dataModels/IApp\";\nimport {IPage} from \"../emulator/models/dataModels/IPage\";\nimport {page1search} from \"./page1search\";\nimport {page2list} from \"./page2list\";\nimport {page3Map} from \"./page3Map\";\nimport {IActionService} from \"../emulator/models/serviceModels/IActionService\";\nimport {IFunc} from \"../emulator/models/dataModels/IFunction\"\nimport {IListItem} from \"../emulator/models/dataModels/IListItem\";\n\nexport class application implements IApp {\n\n    title: string;\n    currentPageName: string;\n    startPageName: string;\n    pages: Array<IPage>;\n    CentralCallbackFunc: (pageName: string, elementID?: string) => any;\n    _actionService: IActionService;\n\n    constructor() {\n        this.title = \"YumE\";\n        this.currentPageName = \"\";\n        this.startPageName = \"page1search\";\n        this.pages = [];\n        this.CentralCallbackFunc = this.appCallback;\n    }\n\n    injectActionService(as: IActionService) {\n        this._actionService = as;\n    }\n\n    startAddingPages() {\n        this.pages.push(new page1search());\n        this.pages.push(new page2list());\n        this.pages.push(new page3Map());\n    }\n\n    appCallback(pageName:string, elementName: string, targetElementInfo?: string) {\n        let func:Function;\n        switch (elementName){\n            case \"page1button\":\n                if (targetElementInfo){\n                    this._actionService.callYelpSearchAPI(targetElementInfo,(json:any)=>{\n                        let list = this.tailorYelpResult(json);\n                        for(let page of this.pages){\n                            if (page.name === 'page2list'){\n                                for(let e of page.rawLayout){\n                                    if (e.type === 'text'&&e.name==='page2text'){\n                                        e.define = list;\n                                    } else if (e.type === 'image') {\n                                        if (typeof json !== 'undefined') {\n                                            if (typeof json.image_url !== 'undefined'){ \n                                                e.define = <string>json.image_url; //better image\n                                            } else {\n                                                //set default image only if valid json, but no image\n                                                e.define = \"assets/food.png\";\n                                            }\n                                        }\n                                    }\n                                }\n                                this._actionService.reRenderPage(page);\n                                break;\n                            }\n                        }\n                        func = this.getMatchedFunction(pageName,elementName,targetElementInfo);\n                        func(this._actionService,targetElementInfo);\n                    });\n                } else {\n                    this.getMatchedFunction(pageName,elementName)(this._actionService);\n                }\n\n                break;\n            case \"home\":\n                func = this.getMatchedFunction(\"page2list\",elementName)\n                func(this._actionService);\n                break;\n            case \"mapButton\":\n                this._actionService.reRenderPage(this.pages[2]);\n                func = this.getMatchedFunction(\"page2list\",elementName)\n                func(this._actionService);\n                break;\n            case \"backToResults\":\n                func = this.getMatchedFunction(\"page3Map\",elementName)\n                func(this._actionService);\n        }\n    }\n\n    getMatchedFunction(pageName: string, elementID: string, targetElementID?:string): Function {\n        let callback: IFunc;\n        let targetPage: IPage;\n\n        for (let page of this.pages) {\n            if (page.name === pageName) {\n                targetPage = page;\n                break;\n            }\n        }\n\n        for (let func of targetPage.callback) {\n            if (func.bindToName === elementID) {\n                callback = func;\n                break;\n            }\n        }\n\n        return callback.callbackFunction;\n    }\n\n    tailorYelpResult(json:Object):string{\n        let define:string;\n\n        //Yelp API suck even for v2 version.\n        if (json) {\n            let _item:any = json;\n\n            //Need this weird coding, to cover yelp's bad non-consistent API design.\n            let title:string = _item.name ? _item.name : \"\";\n            let phone:string = _item.phone ? _item.phone :\"\";\n            let rating:string = _item.rating ? _item.rating : \"\";\n            let category:string = _item.categories ? _item.categories[0][0] : \"\";\n            let comment:string = _item.snippet_text ? _item.snippet_text : \"\";\n\n            let address:string;\n            let lat:number;\n            let long:number\n            if(_item.location){\n                address = _item.location.address ? _item.location.address[0] : \"\";\n                if(_item.location.coordinate){\n                    lat = _item.location.coordinate.latitude;\n                    long = _item.location.coordinate.longitude;\n                } else {\n                    lat = long = 0;\n                }\n            } else {\n                address = \"\";\n                lat = long = 0;\n            }\n            for(let e of this.pages[2].rawLayout){\n                if(e.type === 'image'){\n                    let coords = \"\"+lat + \",\" + long;\n                    e.define = this.googleMapsHelper(coords);\n                    break;\n                }\n            }\n\n            define ='<br/>'+'<strong>Title: \\</strong>' + title + '<br/>'+'<strong>Phone: \\</strong>'\n                     + phone + '   |  '  + '<strong\\>Address: \\</strong>' + address\n                     + '<br/>' +'<strong>Rating: \\</strong>' + rating\n                     + '   |  ' +'<strong>Category: \\</strong>' + category\n                     + '<br/>' +'<strong>Comment: \\</strong>' + comment;\n        } else {\n            define = '<br/>' + \"Sorry, Yelp can't recognize your keyword, please go back and search again.\"\n            //so that sad image returns if successful then failed search\n            this.pages[1].rawLayout[3].define = \"./assets/cry.png\";\n        }\n        return define;\n    }\n\n    googleMapsHelper(coords: string): string{\n        let mapURL: string = \"https://maps.googleapis.com/maps/api/staticmap?&size=300x230&maptype=roadmap\" +\n                     \"&visible=Octagon,Dunedin,NZ\" +\n                     \"&markers=color:yellow%7Clabel:U%7C-45.8743,170.5036\" + \n                     \"&markers=color:blue%7Clabel:F%7C\";\n        let apiKey: string = \"&key=AIzaSyDHTnM42xU_IGgOk0OGswZGOAtDRr8e66I\";\n        return mapURL + coords + apiKey;\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./application/application.ts\n **/","import {IFunc} from \"../emulator/models/dataModels/IFunction\";\nimport {IElement} from \"../emulator/models/dataModels/IElement\";\nimport {IPage} from \"../emulator/models/dataModels/IPage\";\nimport {IActionService} from \"../emulator/models/serviceModels/IActionService\";\n\nexport class page1search implements IPage{\n    name: string;\n    rawLayout: Array<IElement>;\n    afterRenderLayout: JQuery;\n    callback: Array<IFunc>;\n\n    constructor() {\n        this.name = \"page1search\";\n        this.rawLayout = this.returnRawLayout();\n        this.afterRenderLayout = null;\n        this.callback = this.returnCallbackFuncs();\n    }\n\n    returnRawLayout():Array<IElement>{\n        return [\n            {\n                type:\"image\",\n                name:\"page1image\",\n                define:\"./assets/YuMe_logo.jpg\"\n            },\n            {\n                type:\"text\",\n                name:\"page1text\",\n                define:\"Search better, eat fatter :)\"\n            },\n            {\n                type:\"input\",\n                name:\"page1input\",\n                define:\"Enter the name\"\n            },\n            {\n                type:\"button\",\n                name:\"page1button\",\n                targetElementID:\"page1input\",\n                define:\"YumE it!\"\n            },\n            {\n                type:\"text\",\n                name:\"page1text1\",\n                define:\" \"\n            }\n        ];\n    }\n\n    returnCallbackFuncs():Array<IFunc>{\n        return [\n            {\n                bindToName:\"page1button\",\n                targetID:\"page1text\",\n                callbackFunction:this.searchButtonCallBack\n            }\n        ];\n    }\n\n    searchButtonCallBack(_actionService:IActionService, info:string){\n        if (info && info != \"\"){\n            _actionService.goPage(\"page2list\");\n        } else{\n            _actionService.showNotification(\"Please enter the name of restaurant.\");\n        }\n    }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./application/page1search.ts\n **/","import {IFunc} from \"../emulator/models/dataModels/IFunction\";\nimport {IElement} from \"../emulator/models/dataModels/IElement\";\nimport {IPage} from \"../emulator/models/dataModels/IPage\";\nimport {IActionService} from \"../emulator/models/serviceModels/IActionService\";\n\nexport class page2list implements IPage{\n    name: string;\n    rawLayout: Array<IElement>;\n    afterRenderLayout: JQuery;\n    callback: Array<IFunc>;\n\n    constructor() {\n        this.name = \"page2list\";\n        this.rawLayout = this.returnRawLayout();\n        this.afterRenderLayout = null;\n        this.callback = this.returnCallbackFuncs();\n    }\n\n    returnRawLayout():Array<IElement>{\n        return [\n            {\n                type:\"text\",\n                name:\"page2placeholder\",\n                define:\" \"\n            },\n            {\n                type:\"button\",\n                name:\"home\",\n                define:\"Back\"\n            },\n            {\n                type:\"text\",\n                name:\"page2placeholder\",\n                define:\" \"\n            },\n            {\n                type:\"image\",\n                name:\"page2image\",\n                define:\"./assets/cry.png\"\n            },\n            {\n                type:\"text\",\n                name:\"page2text\",\n                define:\"I really love it\"\n            },\n            {\n                type:\"button\",\n                name:\"mapButton\",\n                define:\"Map\"\n            }\n        ];\n    }\n\n    returnCallbackFuncs():Array<IFunc>{\n        return [\n            {\n                bindToName:\"home\",\n                callbackFunction:this.goBackButtonCallBack\n            },\n            {\n                bindToName:\"mapButton\",\n                callbackFunction:this.goMapCallBack\n            }\n        ];\n    }\n\n    goBackButtonCallBack(_actionService:IActionService){\n        _actionService.goPage(\"page1search\");\n    }\n    goMapCallBack(_actionService:IActionService){\n        _actionService.goPage(\"page3Map\");\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./application/page2list.ts\n **/","import {IFunc} from \"../emulator/models/dataModels/IFunction\";\nimport {IElement} from \"../emulator/models/dataModels/IElement\";\nimport {IPage} from \"../emulator/models/dataModels/IPage\";\nimport {IActionService} from \"../emulator/models/serviceModels/IActionService\";\n\nexport class page3Map implements IPage{\n    name: string;\n    rawLayout: Array<IElement>;\n    afterRenderLayout: JQuery;\n    callback: Array<IFunc>;\n    defaultMap: string = \"https://maps.googleapis.com/maps/api/staticmap?&size=300x230&maptype=roadmap\" +\n                     \"&visible=Octagon,Dunedin,NZ\" +\n                     \"&markers=color:yellow%7Clabel:U%7C-45.8743,170.5036\" +\n                     \"&key=AIzaSyDHTnM42xU_IGgOk0OGswZGOAtDRr8e66I\";\n\n    constructor() {\n        this.name = \"page3Map\";\n        this.rawLayout = this.returnRawLayout();\n        this.afterRenderLayout = null;\n        this.callback = this.returnCallbackFuncs();\n    }\n\n    returnRawLayout():Array<IElement>{\n        return [\n            {\n                type:\"text\",\n                name:\"page3placeholder\",\n                define:\" \"\n            },\n            {\n                type:\"button\",\n                name:\"backToResults\",\n                define:\"Back\"\n            },\n            {\n                type:\"button\",\n                name:\"home\",\n                define:\"Search\"\n            },\n            {\n                type:\"text\",\n                name:\"page3placeholder\",\n                define:\" \"\n            },\n            {\n                type:\"image\",\n                name:\"page3image\",\n                define: this.defaultMap\n            }\n        ];\n    }\n\n    returnCallbackFuncs():Array<IFunc>{\n        return [\n            {\n                bindToName:\"backToResults\",\n                callbackFunction:this.goBackButtonCallBack\n            },\n            {    \n                bindToName:\"home\",\n                callbackFunction:this.goHomeCallBack\n            }\n        ];\n    }\n\n    goBackButtonCallBack(_actionService:IActionService){\n        _actionService.goPage(\"page2list\");\n    }\n\n    goHomeCallBack(_actionService:IActionService){\n        _actionService.goPage(\"page1search\");\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./application/page3Map.ts\n **/","import {IStateService} from \"../models/serviceModels/IStateService\";\nimport {IPage} from \"../models/dataModels/IPage\";\nimport {IApp} from \"../models/dataModels/IApp\";\nimport {IElement} from \"../models/dataModels/IElement\";\n\n\nexport class StateService implements IStateService {\n    _app: IApp;\n\n    /**\n     * Constructs the application\n     * @method constructor\n     * @param  {IApp}      app - retrieves required information\n     * @return {[type]}        - returns the application information\n     */\n    constructor(app: IApp) {\n        this._app = app;\n    }\n\n    getStartPageName(): string {\n        return this._app.startPageName;\n    }\n\n    getCurrentPageName(): string {\n        return this._app.currentPageName;\n    }\n\n    setCurrentPageName(name: string) {\n        this._app.currentPageName = name;\n    }\n\n    getCurrentPage(): IPage {\n        let targetName: string = this._app.currentPageName;\n        let returnPage: IPage;\n        for (let page of this._app.pages) {\n            if (page.name === targetName) {\n                returnPage = page;\n                break;\n            }\n        }\n        return returnPage;\n    }\n\n    getPage(name: string): IPage {\n        let returnPage: IPage;\n        for (let page of this._app.pages) {\n            if (page.name === name) {\n                returnPage = page;\n                break;\n            }\n        }\n        return returnPage;\n    }\n\n    getPages(): Array<IPage> {\n        return this._app.pages;\n    }\n\n    emulatorCentralCallBack(element: IElement, targetElementInfo?: string) {\n        let currentPageName:string = this.getStartPageName();\n        if (targetElementInfo) {\n            this._app.CentralCallbackFunc(currentPageName, element.name, targetElementInfo);\n        } else {\n            this._app.CentralCallbackFunc(currentPageName, element.name);\n        }\n    }\n\n    getAppCallBack(): (pageName: string, elementID?: string) => void {\n        return this._app.CentralCallbackFunc;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./emulator/services/StateService.ts\n **/","///<reference path=\"../ui/types/jquery.d.ts\" />\n\nimport {IPage} from '../models/dataModels/IPage'\nimport {ITemplatingService} from \"../models/serviceModels/ITemplatingService\";\nimport {IElement} from \"../models/dataModels/IElement\";\nimport {IStateService} from \"../models/serviceModels/IStateService\";\nimport {IListItem} from \"../models/dataModels/IListItem\";\n\nexport class TemplatingService implements ITemplatingService {\n    _stateService: IStateService;\n\n    /**\n     * Constructs the service state\n     * @method constructor\n     * @param  {IStateService} stateService - provides the service state\n     * @return {[type]}                     - returns service template\n     */\n    constructor(stateService: IStateService) {\n        this._stateService = stateService;\n    }\n\n    createPage(page: IPage): JQuery {\n        let outDiv: JQuery = this.createLayout();\n\n        for (let element1 of page.rawLayout){\n            let row = this.createjQueryItem(\"div\",\n                undefined,\n                \"row\",\n                undefined);\n            let element:IElement = element1;\n            switch (element.type) {\n                case \"button\":\n                    let temp = this.createjQueryItem(\"button\",\n                        [{key:\"id\", value:element.name}],\n                        \"btn btn-primary btn-lg btn-block\", //btn-block\n                        <string>element.define);\n                    if (element.targetElementID) {\n                        $(\".emulator\").on(\n                            'click',\n                            \"#\"+element.name,\n                            ()=>{\n                                let targetText = $(\"#\"+element.targetElementID).val();\n                                this._stateService.emulatorCentralCallBack(element,targetText);\n                            });\n                    } else {\n                        $(\".emulator\").on(\n                            'click',\n                            \"#\"+element.name,\n                            ()=>{\n                                this._stateService.emulatorCentralCallBack(element);\n                            });\n                    }\n                    if($(\".btn\", outDiv).length) { //if there already a button on the page\n                        var buttons = $(\".btn\", outDiv);\n                        let width  = 12 / (buttons.length + 1);\n                        buttons.after(temp);\n                        buttons = $(\".btn\", outDiv); //to capture new button too\n                        buttons.removeClass(\"btn-block\");\n                        buttons.addClass(\"col-sm-\" + width);\n                    } else {\n                        row.append(temp);\n                    }\n                    break;\n                case \"text\":\n                    let temp1 = this.createjQueryItem(\"p\",\n                        [{key:\"id\", value:element.name}],\n                        undefined,\n                        <string>element.define);\n                    row.append(temp1);\n                    break;\n                case \"image\":\n                    let temp2 = this.createjQueryItem(\"img\",\n                        [{key:\"id\", value:element.name}, {key:\"src\", value:<string>element.define}],\n                        \"img-fluid\");\n                    row.append(temp2);\n                    break;\n                case \"input\":\n                    let temp3 = this.createjQueryItem(\"div\", undefined, \"form-group\");\n\n                    let label = this.createjQueryItem(\"label\",\n                        [{key:\"for\", value:element.name}],\n                        \"sr-only\",\n                        <string>element.define);\n                    temp3.append(label);\n\n                    let input = this.createjQueryItem(\"input\",\n                        [{key:\"type\", value:\"text\"}, {key:\"id\", value:element.name}, {key:\"for\", value:element.name}, {key:\"placeholder\", value:<string>element.define}],\n                        \"form-control\",\n                        <string>element.define);\n                    temp3.append(input);\n                    row.append(temp3);\n                    break;\n                case \"list\":\n                    let listGroup = this.createjQueryItem(\"div\", undefined, \"list-group\");\n                    let listItemsData = <Array<IListItem>>(element.define);\n                    for (let item of listItemsData){\n                        let a = this.createjQueryItem(\"a\",\n                            undefined,\n                            \"list-group-item list-group-item-action\");\n                        $(\".emulator\").on(\n                            'click',\n                            \"#\"+element.name,\n                            ()=>{\n                                this._stateService.emulatorCentralCallBack(element,item.url);\n                            });\n                        let h5 = this.createjQueryItem(\"h5\",\n                            undefined,\n                            \"list-group-item-heading\",\n                            item.title);\n                        let p = this.createjQueryItem(\"p\",\n                            undefined,\n                            \"list-group-item-text\",\n                            item.description);\n                        a.append(h5);\n                        a.append(p);\n                        listGroup.append(a);\n                    }\n                    row.append(listGroup);\n                    break;\n            }\n            outDiv.append(row);\n        }\n\n        return outDiv;\n    }\n\n    createPagesAndSave() {\n        for (let page of this._stateService.getPages()){\n            page.afterRenderLayout = this.createPage(page);\n        }\n    }\n\n    createLayout(): JQuery {\n        return this.createjQueryItem('div', undefined, \"container-fluid\");\n    }\n\n    removeElementFromDOM(className: string) {\n        $(className).remove();\n    }\n\n    createjQueryItem(type: string,\n                     attrs?: Array<{key: string,value: string}>,\n                     styleClasses?: string,\n                     text?: string): JQuery {\n        let domElement = $(document.createElement(type));\n        if (styleClasses) {\n            domElement.addClass(styleClasses);\n        }\n        if (attrs) {\n            for (let item of attrs){\n                domElement.attr(item.key, item.value);\n            }\n        }\n\n        if (text) {\n            domElement.html(text);\n        }\n        return domElement;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./emulator/services/TemplatingService.ts\n **/","import {ISystemService} from \"../models/serviceModels/ISystemService\";\nimport {IApp} from \"../models/dataModels/IApp\";\nimport {IPage} from \"../models/dataModels/IPage\";\nimport {IStateService} from \"../models/serviceModels/IStateService\";\nimport {ITemplatingService} from \"../models/serviceModels/ITemplatingService\";\n\nexport class SystemService implements ISystemService{\n    _templatingService: ITemplatingService;\n    _stateService: IStateService;\n\n    /**\n     * Constructs the template and services\n     * @method constructor\n     * @param  {ITemplatingService} templatingService - provides the template\n     * @param  {IStateService}      stateService      - provides service state\n     * @return {[type]}                               - returns system service\n     */\n    constructor(templatingService: ITemplatingService, stateService: IStateService) {\n        this._templatingService = templatingService;\n        this._stateService = stateService;\n    }\n\n    removeCurrentPageFromScreen() {\n        this._templatingService.removeElementFromDOM(\".container-fluid\");\n    }\n\n    goPage(name: string) {\n        this.removeCurrentPageFromScreen();\n        for (let page of this._stateService.getPages()){\n            if (page.name === name){\n                $(\".emulator\").prepend(page.afterRenderLayout);\n                this.renewCurrentPage(page.name);\n            }\n        }\n    }\n\n    renderAllPages(page?:IPage){\n        if (page){\n            let page1:JQuery = this._templatingService.createPage(page);\n            this._stateService.getPage(page.name).afterRenderLayout = page1;\n        } else {\n            this._templatingService.createPagesAndSave();\n        }\n    }\n\n    goStartPage() {\n        this.goPage(this._stateService.getStartPageName());\n    }\n\n    renewCurrentPage(name: string) {\n        this._stateService.setCurrentPageName(name);\n    }\n\n    startEmulator() {\n        let backgroundDIV = this._templatingService.createjQueryItem(\"div\",undefined,\"splashScreen\");\n        let brand = this._templatingService.createjQueryItem(\"p\",undefined,\"brand\",\"Smartisan\");\n        $(\".emulator\").append(backgroundDIV);\n        backgroundDIV.append(brand);\n        backgroundDIV.fadeIn('slow',()=>{\n            brand.fadeIn('slow')\n                .fadeOut('slow')\n                .fadeIn('slow',()=>{\n                    this.hideSplashScreen();\n                    this.renderAllPages();\n                    this.goStartPage();\n                });\n        });\n    }\n\n    hideSplashScreen(){\n        $(\".splashScreen\").fadeOut('slow').remove();\n    }\n\n    showNotification(text:string) {\n        let noticeDIV = this._templatingService.createjQueryItem(\"div\", undefined, \"bg-danger\", text);\n        $(\".emulator\").prepend(noticeDIV);\n        setTimeout(()=>{\n            noticeDIV.fadeOut('slow').remove();\n        },2000);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./emulator/services/SystemService.ts\n **/","import {IActionService} from \"../models/serviceModels/IActionService\";\nimport {ISystemService} from \"../models/serviceModels/ISystemService\";\nimport {IPage} from \"../models/dataModels/IPage\";\n\ndeclare var OAuth:any;\n\nexport class ActionService implements IActionService{\n    _systemService: ISystemService;\n\n    /**\n     * Constructs the services provided to the application\n     * @method constructor\n     * @param  {ISystemService} systemService - retrieves required information\n     * @return {[type]}                       - returns service of page request\n     */\n    constructor(systemService: ISystemService) {\n        this._systemService = systemService;\n    }\n\n    goPage(name: string) {\n        this._systemService.goPage(name);\n    }\n\n    showNotification(words: string) {\n        this._systemService.showNotification(words);\n    }\n\n    saveToLocalStorage(key: string, value: string) {\n        localStorage.setItem(key,value);\n    }\n\n    getFromLocalStorage(key: string): string {\n        return localStorage.getItem(key);\n    }\n\n    reRenderPage(page:IPage){\n        this._systemService.renderAllPages(page);\n    }\n\n    callYelpSearchAPI(keywords:string, callback:Function){\n        let auth = {\n            consumerKey : \"sNul62e6H0We5KJLGYP_Bw\",\n            consumerSecret : \"RxvIBp4BxRvNVxjaPlUWuiPFcYg\",\n            accessToken : \"nguVll4te_e1oDcv2EkS4xKC6GOoQhcN\",\n            accessTokenSecret : \"DrumlhFl5Kwb1ksCpRKEtiW6B58\",\n            serviceProvider : {\n                signatureMethod : \"HMAC-SHA1\"\n            }\n        };\n\n        let terms = keywords;\n        let near = 'Dunedin';\n        let category = 'restaurants,food,bars'\n\n        let accessor = {\n            consumerSecret : auth.consumerSecret,\n            tokenSecret : auth.accessTokenSecret\n        };\n\n        let parameters = [];\n        parameters.push(['term', terms]);\n        parameters.push(['location', near]);\n        parameters.push(['category_filter', category]);\n        parameters.push(['callback', 'cb']);\n        parameters.push(['oauth_consumer_key', auth.consumerKey]);\n        parameters.push(['oauth_consumer_secret', auth.consumerSecret]);\n        parameters.push(['oauth_token', auth.accessToken]);\n        parameters.push(['oauth_signature_method', 'HMAC-SHA1']);\n\n        let message = {\n            'action' : 'https://api.yelp.com/v2/search',\n            'method' : 'GET',\n            'parameters' : parameters\n        };\n\n\n\n        OAuth.setTimestampAndNonce(message);\n        OAuth.SignatureMethod.sign(message, accessor);\n\n        let parameterMap = OAuth.getParameterMap(message.parameters);\n\n        $.ajax({\n            'url' : message.action,\n            'data' : parameterMap,\n            'dataType' : 'jsonp',\n            'jsonpCallback' : 'cb',\n            'cache': true\n        })\n        .done((data, textStatus, jqXHR) => {\n                callback(data.businesses[0]);\n            }\n        )\n        .fail((jqXHR, textStatus, errorThrown) => {\n                console.log('error[' + errorThrown + '], status[' + textStatus\n                                     + '], jqXHR[' + JSON.stringify(jqXHR) + ']');\n            }\n        );\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./emulator/services/ActionService.ts\n **/"],"sourceRoot":""}